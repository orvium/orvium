/**
 * Orvium API
 *  This is the OpenAPI 3.0 specification for the Orvium REST API.  Some useful links:  - [Orvium website](https://orvium.io) 
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { UserType } from './userType';


export interface UserPrivateDTO { 
    userType: UserType;
    /**
     * User ID string
     */
    userId: string;
    /**
     * User provider ids
     */
    providerIds: Array<string>;
    /**
     * Publications where the user is mentioned as author or submitter in the platform
     */
    starredDeposits: Array<string>;
    /**
     * Check if the user has finished the sign-up
     */
    isOnboarded: boolean;
    /**
     * User email
     */
    email?: string;
    /**
     * Temporary value when the user is confirming a new email
     */
    emailPendingConfirmation?: string;
    /**
     * User roles in the platform
     */
    roles: Array<string>;
    /**
     * User profile completion percentage
     */
    percentageComplete: number;
    /**
     * User invitation url
     */
    inviteToken?: string;
    /**
     * Check if the user has accepted the Terms and Conditions
     */
    acceptedTC: boolean;
    /**
     * Check if the user is impersonating another user
     */
    impersonatedUser?: string;
    /**
     * Check if the user has accepted the ithenticate eula
     */
    iThenticateEULAAccepted?: boolean;
    /**
     * User ID ObjectID
     */
    _id: string;
    /**
     * User first name
     */
    firstName: string;
    /**
     * User last name
     */
    lastName: string;
    /**
     * User nickname
     */
    nickname: string;
    /**
     * Institutions of the user
     */
    institutions: Array<string>;
    /**
     * User orcid
     */
    orcid?: string;
    /**
     * User disciplines
     */
    disciplines: Array<string>;
    /**
     * User description
     */
    aboutMe?: string;
    /**
     * Blog url
     */
    blog?: string;
    /**
     * User role in the platform
     */
    role?: string;
    /**
     * User linkedin url
     */
    linkedin?: string;
    /**
     * The url of the image put in the profile banner
     */
    bannerURL?: string;
    /**
     * Author gravatar md5 hash
     */
    gravatar?: string;
    /**
     * The url of the image put in the profile avatar
     */
    avatar?: string;
    /**
     * User actions
     */
    actions: Array<string>;
}



