/**
 * Orvium API
 *  This is the OpenAPI 3.0 specification for the Orvium REST API.  Some useful links:  - [Orvium website](https://orvium.io) 
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { DoiStatus } from './doiStatus';
import { DepositDTO } from './depositDTO';
import { ReviewDecision } from './reviewDecision';
import { UserSummaryDTO } from './userSummaryDTO';
import { ReviewKind } from './reviewKind';
import { ReviewStatus } from './reviewStatus';
import { CommunityDTO } from './communityDTO';
import { FileMetadata } from './fileMetadata';
import { HistoryLogLine } from './historyLogLine';


export interface ReviewPopulatedDTO { 
    decision: ReviewDecision;
    /**
     * Review transactions
     */
    transactions?: { [key: string]: any; };
    status: ReviewStatus;
    kind: ReviewKind;
    doiStatus?: DoiStatus;
    ownerProfile: UserSummaryDTO;
    depositPopulated: DepositDTO;
    communityPopulated: CommunityDTO;
    /**
     * Number of comments associated with this publication
     */
    socialComments: number;
    /**
     * Review ID
     */
    _id: string;
    /**
     * Review creator ID
     */
    creator: string;
    /**
     * Review  author
     */
    author: string;
    /**
     * Review comments
     */
    comments?: string;
    file?: FileMetadata;
    /**
     * List of extra files metadata for this review. Extra files are optional.
     */
    extraFiles: Array<FileMetadata>;
    /**
     * Review url
     */
    url?: string;
    /**
     * Review gravatar
     */
    gravatar?: string;
    /**
     * The url of the image put in the profile avatar
     */
    avatar?: string;
    /**
     * Review reward
     */
    reward?: number;
    /**
     * DOI of the review
     */
    doi?: string;
    /**
     * the deposit of the review
     */
    deposit: string;
    /**
     * the community of the review
     */
    community: string;
    /**
     * Review creation date
     */
    creationDate: string;
    /**
     * Review publication date
     */
    publicationDate?: string;
    /**
     * was invited for a review
     */
    wasInvited?: boolean;
    /**
     * The identity of the reviewer is shown to the author of the publication
     */
    showIdentityToAuthor: boolean;
    /**
     * The identity of the reviewer is shown to everyone
     */
    showIdentityToEveryone: boolean;
    /**
     * Keccak256 is a cryptographic function built into solidity. Can be used for cryptographic signature with a small size.
     */
    keccak256?: string;
    /**
     * Review actions
     */
    actions: Array<string>;
    /**
     * Html extracted automatically for the main review file
     */
    html?: string;
    /**
     * List of images extracted automatically for the main review file
     */
    images: Array<string>;
    /**
     * The url for the pdf of the review. This pdf might have been automatically generated.
     */
    pdfUrl?: string;
    /**
     * Review history
     */
    history: Array<HistoryLogLine>;
    /**
     * The review is shown to the author of the publication
     */
    showReviewToAuthor: boolean;
    /**
     * The review is shown to everyone
     */
    showReviewToEveryone: boolean;
    /**
     * The number of views of the review
     */
    views: number;
}



